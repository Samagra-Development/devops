name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev
  release:
    types: [published]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      actions: write 
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # minimal
            type=pep440,pattern={{version}},value=${{ github.ref_name }},enable=${{ github.event_name == 'release' }}
            # branch event
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          # build-args: 
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        
      - name: Convert repository name to snake case
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | awk -F/ '{print $2}')
          SNAKE_CASE_REPO_NAME=$(echo "${REPO_NAME}" | sed 's/\(.\)\([A-Z]\)/\1_\2/g' | tr '[:upper:]' '[:lower:]' | sed 's/^_//' | tr -s '_' | tr '[:upper:]' '[:lower:]')
          echo "SERVICE=${SNAKE_CASE_REPO_NAME}" >> $GITHUB_ENV

      - name: Trigger deployment workflow
        if: ${{ success() }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.PAT }}" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ secrets.DEVOPS_REPO_NAME || 'devops' }}/dispatches \
            -d '{"event_type":"deploy-trigger","client_payload":{"services":"${{ secrets.SERVICE_NAME  || env.SERVICE }}", "environment":${{ secrets.ENABLE_AUTO_DEPLOY }}}}'
