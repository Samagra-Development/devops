services: 
  data_service:
    image: ${DOCKER_REGISTRY_URL}/${org}/data-service:${DATA_SERVICE_IMAGE_TAG:-${DEFAULT_IMAGE_TAG:?IMAGE_TAG is not set}}
    restart: always
    depends_on:
      ds_tsdb:
        condition: service_healthy
      ds_redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${DS_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DS_DATABASE_PASSWORD}
      DATABASE_NAME: ${DS_DATABASE_NAME:-postgres}
      DATABASE_URL: "postgresql://${DS_DATABASE_USERNAME}:${DS_DATABASE_PASSWORD}@ds_tsdb:5432/${DS_DATABASE_NAME:-postgres}"
      AUTH_BASE_URL: "http://auth_service:3000"
      NISAI_ORG_ID: ${DS_NISAI_ORG_ID:?NISAI org id missing}
      QUEUE_HOST: "ds_redis"
      QUEUE_PORT: "6379"
      CACHE_HOST: "ds_redis"
      CACHE_PORT: "6379"

  ds_tsdb:
    image: timescale/timescaledb:latest-pg16
    volumes:
      - ds_tsdb-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DS_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DS_DATABASE_PASSWORD}
      POSTGRES_DB: ${DS_DATABASE_NAME:-postgres}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  
  ds_redis:
    image: redis:7.2.4
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  ds_tsdb-data: